{"version":3,"sources":["webpack:///src/app/eventdb/eventdb-routing.ts","webpack:///src/app/eventdb/eventdb.component.scss","webpack:///src/app/eventdb/eventdb.component.ts","webpack:///src/app/eventdb/eventdb.module.ts"],"names":["routes","path","component","EventdbRoutingModule","imports","forChild","exports","Book","title","EventdbComponent","db","bookCounter","filter","bookRef","list","books","snapshotChanges","pipe","changes","map","c","key","payload","val","newBook","push","ref","orderByChild","equalTo","selector","template","EventdbModule","declarations"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,QAAMA,MAAM,GAAW,CACrB;AACEC,UAAI,EAAE,EADR;AAEEC,eAAS,EAAE;AAFb,KADqB,CAAvB;;AAWA,QAAaC,oBAAoB;AAAA;AAAA,KAAjC;;AAAaA,wBAAoB,6DAJhC,+DAAS;AACRC,aAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBL,MAAtB,CAAD,CADD;AAERM,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAIgC,GAApBH,oBAAoB,CAApB;;;;;;;;;;;;;;;;AChBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QCKTI,I,GACF,cAAmBC,KAAnB,EAAkC;AAAA;;AAAf,WAAAA,KAAA,GAAAA,KAAA;AAAkB,K;;AAoBzC,QAAaC,gBAAgB;AAS3B,gCAAoBC,EAApB,EAA6C;AAAA;;AAAzB,aAAAA,EAAA,GAAAA,EAAA;AAJZ,aAAAC,WAAA,GAAc,CAAd;AAEA,aAAAC,MAAA,GAAS,EAAT;AAGJ,aAAKC,OAAL,GAAeH,EAAE,CAACI,IAAH,CAAQ,SAAR,CAAf;AACA,aAAKC,KAAL,GAAa,KAAKF,OAAL,CAAaG,eAAb,GAA+BC,IAA/B,CACX,2DAAI,UAAAC,OAAO;AAAA,iBACTA,OAAO,CAACC,GAAR,CAAY,UAAAC,CAAC;AAAA,mBAAK,MAAD,OAAC,CAAD;AAAGC,iBAAG,EAAED,CAAC,CAACE,OAAF,CAAUD;AAAlB,aAAC,EAAyBD,CAAC,CAACE,OAAF,CAAUC,GAAV,EAAzB,CAAL;AAAA,WAAb,CADS;AAAA,SAAX,CADW,CAAb;AAKH;;AAhB0B;AAAA;AAAA,kCAkBb;AACV,cAAMC,OAAO,GAAG,IAAIjB,IAAJ,oBAAqB,KAAKI,WAAL,EAArB,EAAhB;AACA,eAAKE,OAAL,CAAaY,IAAb,CAAkBD,OAAlB;AACH;AArB0B;AAAA;AAAA,sCAuBT;AACd,eAAKX,OAAL,GAAe,KAAKH,EAAL,CAAQI,IAAR,CAAa,SAAb,EAAuB,UAAAY,GAAG;AAAA,mBAAIA,GAAG,CAACC,YAAJ,CAAiB,OAAjB,EAA0BC,OAA1B,CAAkC,YAAlC,CAAJ;AAAA,WAA1B,CAAf;AACH;AAzB0B;AAAA;AAAA,mCA0BhB,CAAE;AA1Bc;;AAAA;AAAA,OAA7B;;;;cAS0B;;;;AATbnB,oBAAgB,6DAjB5B,gEAAU;AACToB,cAAQ,EAAE,aADD;AAKTC,cAAQ,4QALC;;;;AAAA,KAAV,CAiB4B,GAAhBrB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbb,QAAasB,aAAa;AAAA;AAAA,KAA1B;;AAAaA,iBAAa,6DAPzB,+DAAS;AACRC,kBAAY,EAAE,CAAC,mEAAD,CADN;AAER5B,aAAO,EAAE,CACP,4DADO,EAEP,qEAFO;AAFD,KAAT,CAOyB,GAAb2B,aAAa,CAAb","file":"eventdb-eventdb-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { EventdbComponent } from './eventdb.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: EventdbComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class EventdbRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50ZGIvZXZlbnRkYi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { AngularFireDatabase, AngularFireList  } from '@angular/fire/database';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nclass Book {\n    constructor(public title: string) { }\n}\n\n@Component({\n  selector: 'app-eventdb',\n  //templateUrl: './eventdb.component.html',\n  styleUrls: ['./eventdb.component.scss'],\n  \n  template: `\n      <ul>\n          <li *ngFor=\"let book of books | async\">\n              <pre>{{ book | json }}</pre>\n          </li>\n      </ul>\n      <button (click)=\"addBook()\">Add a book!</button>\n      <button (click)=\"filterBooks()\">Filter books</button>\n  `\n  \n})\n\nexport class EventdbComponent implements OnInit  {\n\n  bookRef: AngularFireList<any>;\n  public books: Observable<any[]>;\n\n  private bookCounter = 0;\n\n  private filter = '';\n\n  constructor(private db: AngularFireDatabase) {\n      this.bookRef = db.list('/events');\n      this.books = this.bookRef.snapshotChanges().pipe(\n        map(changes => \n          changes.map(c => ({ key: c.payload.key, ...c.payload.val() }))\n        )\n      );\n  }\n\n  public addBook(): void {\n      const newBook = new Book(`My book #${this.bookCounter++}`);\n      this.bookRef.push(newBook);\n  }\n\n  public filterBooks(): void {\n      this.bookRef = this.db.list('/events',ref => ref.orderByChild('title').equalTo('My book #0'));\n  }\n  ngOnInit() {}\n  \n}\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EventdbComponent } from './eventdb.component';\nimport { EventdbRoutingModule } from './eventdb-routing';\n\n@NgModule({\n  declarations: [EventdbComponent],\n  imports: [\n    CommonModule,\n    EventdbRoutingModule\n  ]\n})\nexport class EventdbModule { }\n"]}